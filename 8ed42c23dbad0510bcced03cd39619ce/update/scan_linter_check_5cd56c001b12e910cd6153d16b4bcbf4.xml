<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <category>code_sanity</category>
        <description>Many Application Files may contain scripts. Server-sided scripts may perform complex read and write operations - usually by using the GlideRecord, GlideAggregate or GlideQuery classes. Such scripts are usually more difficult to maintain and to test. The best place for server-sided testable code is the Script Include.&#13;
Any other Application Files that contain server-side scripts (e.g. Business Rules, server-side UI Actions or ACLs) should mainly call a Script Include function to perform their task.&#13;
If such complex logic is implemented as separate classes or functions in Script Includes it is easier to test them separately.&#13;
Scripts contained in Application Files that "inject" functionality or "hook" into transactions (like Business Rules, ACLs, UI Actions, Scheduled Jobs and many more) can not be tested without actually triggering the mechanism that activates the script contained in the Application File - e.g. in case of a Business Rule that responds to a record update, a record needs to be created and updated in order to trigger the rule and to test the code that is contained in the Business Rule.&#13;
&#13;
The following record classes are allowed to use GlideRecord (and comparable classes):&#13;
sys_script_include&#13;
sys_extension_point&#13;
sys_atf_step_config&#13;
scan_table_check&#13;
scan_linter_check&#13;
scan_column_type_check&#13;
scan_script_only_check</description>
        <documentation_url/>
        <finding_type>scan_finding</finding_type>
        <name>CodeSanity - Use GlideRecord at the right place</name>
        <priority>1</priority>
        <resolution_details>Refactor code contained in Application Files (like Business Rules, UI Actions, ACLs, etc.) into classes and functions defined in Script Includes.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

	if (x_snc_codesanity.IsCheckApplicableToRecord())
	{
		var ArrayValueExists = x_snc_devtools.ArrayValueExists;
		var GetStringValue = x_snc_devtools.GetStringValue;
		var ScriptEmptyStringLiterals = x_snc_devtools.ScriptEmptyStringLiterals;
		var ScriptRemoveComments = x_snc_devtools.ScriptRemoveComments;
		var StringCheckRegEx = x_snc_devtools.StringCheckRegEx;
		
		var strClassName = current.getRecordClassName();
		
		var aAllowedClassNames = [
			'sys_script_include',
			'sys_extension_point',
			'sys_atf_step_config',
			'scan_table_check',
			'scan_linter_check',
			'scan_column_type_check',
			'scan_script_only_check'
			];

		var aBannedClasses = [
			'GlideRecord',
			'GlideRecordSecure',
			'GlideAggregate',
			'GlideQuery'
			];


		if (ArrayValueExists(aAllowedClassNames,strClassName) == false)
		{
			var strSource = GetStringValue(engine.rootNode.toSource());
			strSource = ScriptEmptyStringLiterals(strSource);
			strSource = ScriptRemoveComments(strSource);

			for (var nBanned = 0; nBanned < aBannedClasses.length; nBanned++)
			{
				var strBannedClass = aBannedClasses[nBanned];
				if (StringCheckRegEx(strSource,'new\\s+'+strBannedClass+'\\s*\\(','') == true)
				{
					engine.finding.increment();
				}
			}			
		}
	}

})(engine);]]></script>
        <short_description>GlideRecord should only be used in the right place (e.g. Script Includes)</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-04-14 11:29:17</sys_created_on>
        <sys_id>5cd56c001b12e910cd6153d16b4bcbf4</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>CodeSanity - Use GlideRecord at the right place</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>scan_linter_check_5cd56c001b12e910cd6153d16b4bcbf4</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-05-19 14:11:10</sys_updated_on>
    </scan_linter_check>
    <sys_translated_text action="delete_multiple" query="documentkey=5cd56c001b12e910cd6153d16b4bcbf4"/>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>5cd56c001b12e910cd6153d16b4bcbf4</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-05-19 13:33:06</sys_created_on>
        <sys_id>e9f7712693216a50959b7fda2bba10b1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-05-19 13:33:06</sys_updated_on>
        <table>scan_linter_check</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
