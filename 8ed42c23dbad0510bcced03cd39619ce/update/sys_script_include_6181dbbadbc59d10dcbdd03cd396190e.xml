<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_codesanity.IsCheckApplicableToRecordByRules</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Returns true if the given check should be executed on the given record based on the given rules, false if not.</description>
        <mobile_callable>false</mobile_callable>
        <name>IsCheckApplicableToRecordByRules</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function IsCheckApplicableToRecordByRules(grCheck,grRecord,rules)
{
	var IsValidRecord = x_snc_devtools.IsValidRecord;
	var GetValue = x_snc_devtools.GetValue;
	var GetRecord = x_snc_devtools.GetRecord;
	var IsObject = x_snc_devtools.IsObject;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetBoolValue = x_snc_devtools.GetBoolValue;
	var GetAppName = x_snc_devtools.GetAppName;

	
	if (IsValidRecord(grRecord) == false)
	{
		return false;
	}
	
	if (IsValidRecord(grCheck) == false)
	{
		return false;
	}
	
	if (IsObject(rules) == false)
	{
		return true;
	}
	
	var strRecordScopeName = '';
	var strRecordScopeAppName = '';
	if (   grRecord.getRecordClassName() == 'sys_app'
		|| grRecord.getRecordClassName() == 'sys_store_app'
		|| grRecord.getRecordClassName() == 'sys_scope')
	{
		strRecordScopeName = GetStringValue(grRecord.scope);
		strRecordScopeAppName = GetAppName(grRecord.sys_id);
	}
	else
	{
		strRecordScopeName = GetStringValue(grRecord.sys_scope.scope);
		strRecordScopeAppName = GetAppName(grRecord.sys_scope);
	}
	if (strRecordScopeName == 'global')
	{
		strRecordScopeName = strRecordScopeAppName;
	}
	
	
	
	
	
	var bResult = true;
	
	// BLACKLISTING - prevent specific checks from running
	
	var aBlacklistRules = GetArrayValue(GetValue(rules,'blacklist'));
	
	for (var nRule = 0; nRule < aBlacklistRules.length; nRule++)
	{
		var rule = aBlacklistRules[nRule];
		var aChecks = GetArrayValue(GetValue(rule,'checks'));
		
		var bAppliesToCheck = false;
		
		if (aChecks.length == 0) // no checks are specified in the rule: the rule applies to all checks
		{
			bAppliesToCheck = true;
		}
		else
		{
			for (var nCheck = 0; nCheck < aChecks.length; nCheck++)
			{
				var strCheck = aChecks[nCheck];
				if (strCheck == grCheck.getValue('name') || strCheck == GetStringValue(grCheck.sys_id))
				{
					bAppliesToCheck = true;
				}
			}
		}
		
		if (bAppliesToCheck == true)
		{
			var bAppliesToRecord = false;

			var bAll = GetBoolValue(GetValue(rule,'all'));
			if (bAll == true)
			{
				bAppliesToRecord = true;
			}
			else
			{
				var aScopes = GetArrayValue(GetValue(rule,'scopes'));
				for (var nScope = 0; nScope < aScopes.length; nScope++)
				{
					var strScope = aScopes[nScope];
					if (   strScope == strRecordScopeAppName
						|| strScope == strRecordScopeName
						|| strScope == GetStringValue(grRecord.sys_scope) )
					{
						bAppliesToRecord = true;
					}
				}
			}
				
			if (bAppliesToRecord == true)
			{
				bResult = false;
			}
		}
	}
	
	
	
	// WHITELISTING - only run specific checks if conditions match
	
	var aWhitelistRules = GetArrayValue(GetValue(rules,'whitelist'));
	
	for (var nRule = 0; nRule < aWhitelistRules.length; nRule++)
	{
		var rule = aWhitelistRules[nRule];
		var aChecks = GetArrayValue(GetValue(rule,'checks'));
		
		var bAppliesToCheck = false;
		
		for (var nCheck = 0; nCheck < aChecks.length; nCheck++)
		{
			var strCheck = aChecks[nCheck];
			if (strCheck == grCheck.getValue('name') || strCheck == GetStringValue(grCheck.sys_id))
			{
				bAppliesToCheck = true;
			}
		}
		
		if (bAppliesToCheck == true)
		{
			bResult = false;
			
			var aScopes = GetArrayValue(GetValue(rule,'scopes'));
			
			for (var nScope = 0; nScope < aScopes.length; nScope++)
			{
				var strScope = aScopes[nScope];
				if (   strScope == strRecordScopeAppName
					|| strScope == strRecordScopeName
					|| strScope == GetStringValue(grRecord.sys_scope) )
				{
					bResult = true;
				}
			}
		}
	}
	
	return bResult;

}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-08-05 13:15:44</sys_created_on>
        <sys_id>6181dbbadbc59d10dcbdd03cd396190e</sys_id>
        <sys_mod_count>22</sys_mod_count>
        <sys_name>IsCheckApplicableToRecordByRules</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>sys_script_include_6181dbbadbc59d10dcbdd03cd396190e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-08-30 13:59:02</sys_updated_on>
    </sys_script_include>
</record_update>
