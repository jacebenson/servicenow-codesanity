<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="INSERT_OR_UPDATE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>1</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-08 14:54:17</sys_created_on>
        <sys_id>d38bdbf1dbac91109232dad1f3961936</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="CodeSanity WORK IN PROGRESS" source="x_snc_codesanity">8ed42c23dbad0510bcced03cd39619ce</sys_package>
        <sys_policy/>
        <sys_scope display_value="CodeSanity WORK IN PROGRESS">8ed42c23dbad0510bcced03cd39619ce</sys_scope>
        <sys_update_name>sys_atf_step_d38bdbf1dbac91109232dad1f3961936</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-05-17 15:36:21</sys_updated_on>
        <table/>
        <test display_value="CodeSanity - Script include has a valid name">7f7b5bf1dbac91109232dad1f39619c0</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="delete_multiple" query="document_key=d38bdbf1dbac91109232dad1f3961936"/>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>d38bdbf1dbac91109232dad1f3961936</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-08 14:54:17</sys_created_on>
        <sys_id>909bdbf1dbac91109232dad1f3961968</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-07-08 14:54:17</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_variable_value action="INSERT_OR_UPDATE">
        <document>sys_atf_step</document>
        <document_key>d38bdbf1dbac91109232dad1f3961936</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-07-08 14:54:17</sys_created_on>
        <sys_id>d89bdbf1dbac91109232dad1f3961968</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-05-17 15:36:21</sys_updated_on>
        <value>(function(outputs, steps, stepResult, assertEqual)&#13;
{&#13;
	var test = new x_snc_devtools.TestAPI(outputs, steps, stepResult, assertEqual);&#13;
	&#13;
	test.SetResult(true);&#13;
&#13;
	var strCheck = '98e81f71dbac91109232dad1f3961929';&#13;
	&#13;
	var testdata = new x_snc_devtools.TestDataAPI('_ATF_CODESANITY_');&#13;
&#13;
	var strRecordSysId = testdata.CreateScriptInclude(&#13;
		'global',&#13;
		'Test1',&#13;
		'function _ATF_CODESANITY_Test1()\n'&#13;
		+'{ return true; }');&#13;
	test.TestCase_InstanceScanCheck(strCheck,'sys_script_include',strRecordSysId,false);&#13;
&#13;
/*&#13;
	// This test case started failing on 2025-05-11 for unknown reasons&#13;
&#13;
	// Special case here, because we need to create a script include WITHOUT a name - which is not possible with TestDataAPI&#13;
	var grSI = new GlideRecord('sys_script_include');&#13;
	grSI.initialize();&#13;
	var strRecordSysId = x_snc_devtools.GlideRecordInsert(grSI);&#13;
	test.Log(x_snc_devtools.RenderValue(grSI));&#13;
	test.TestCase_InstanceScanCheck(strCheck,'sys_script_include',strRecordSysId,true);&#13;
*/&#13;
&#13;
	// Special case here, because we need to create a script include with a short name - which again is not possible with TestDataAPI&#13;
	var grSI = new GlideRecord('sys_script_include');&#13;
	grSI.initialize();&#13;
	grSI.name = 'Ab';&#13;
	var strRecordSysId = x_snc_devtools.GlideRecordInsert(grSI);&#13;
	test.TestCase_InstanceScanCheck(strCheck,'sys_script_include',strRecordSysId,true);&#13;
	&#13;
	// Special case here, because we need to create an invalid script include name - which again is not possible with TestDataAPI&#13;
	var grSI = new GlideRecord('sys_script_include');&#13;
	grSI.initialize();&#13;
	grSI.name = '1Abcdef';&#13;
	var strRecordSysId = x_snc_devtools.GlideRecordInsert(grSI);&#13;
	test.TestCase_InstanceScanCheck(strCheck,'sys_script_include',strRecordSysId,true);&#13;
&#13;
&#13;
	return test.GetResult();&#13;
	&#13;
})(outputs, steps, stepResult, assertEqual);</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
</record_update>
